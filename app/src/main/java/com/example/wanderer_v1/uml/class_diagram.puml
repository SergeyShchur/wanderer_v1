@startuml

package "Model" {
  class Place {
    - id: String
    - name: String
    - description: String
    - latitude: Double
    - longitude: Double
    - imageUrl: String
    - userId: String
  }

  class User {
    - id: String
    - email: String
    - displayName: String
  }

  class PlaceRepository {
    + getAllPlaces(): LiveData<List<Place>>
    + addPlace(place: Place)
    + getPlaceById(id: String): LiveData<Place>
  }

  class UserRepository {
    + registerUser(email: String, password: String): LiveData<User>
    + loginUser(email: String, password: String): LiveData<User>
    + getCurrentUser(): LiveData<User>
  }

  class FirebaseAuthService {
    + registerUser(email: String, password: String)
    + loginUser(email: String, password: String)
    + logoutUser()
    + getCurrentUser(): FirebaseUser
  }

  class FirebaseDatabaseService {
    + getAllPlaces(): LiveData<List<Place>>
    + addPlace(place: Place)
    + getPlaceById(id: String): LiveData<Place>
  }

  class FirebaseStorageService {
    + uploadImage(imageUri: Uri): LiveData<String>
  }
}

package "ViewModel" {
  class MapViewModel {
    + places: LiveData<List<Place>>
    + addPlace(place: Place)
    + getPlaceById(id: String): LiveData<Place>
  }

  class LoginViewModel {
    + user: LiveData<FirebaseUser>
    + registerUser(email: String, password: String)
    + loginUser(email: String, password: String)
    + logoutUser()
  }

  class RegisterViewModel {
    + user: LiveData<FirebaseUser>
    + registerUser(email: String, password: String)
  }
}

package "View" {
  class MainActivity {
    + onCreate()
    + onMapReady()
  }

  class LoginActivity {
    + onCreate()
    + onLogin()
  }

  class RegisterActivity {
    + onCreate()
    + onRegister()
  }

  class MapFragment {
    + onViewCreated()
  }

  class PlaceDetailFragment {
    + onViewCreated()
  }

  class AddPlaceFragment {
    + onViewCreated()
  }
}

Model.FirebaseAuthService --> Model.UserRepository
Model.FirebaseDatabaseService --> Model.PlaceRepository
Model.FirebaseStorageService --> Model.PlaceRepository
ViewModel.MapViewModel --> Model.PlaceRepository
ViewModel.LoginViewModel --> Model.UserRepository
ViewModel.RegisterViewModel --> Model.UserRepository
ViewModel.MapViewModel --> View.MapFragment
ViewModel.MapViewModel --> View.MainActivity
ViewModel.LoginViewModel --> View.LoginActivity
ViewModel.RegisterViewModel --> View.RegisterActivity
View.MapFragment --> View.PlaceDetailFragment
View.MapFragment --> View.AddPlaceFragment
Model.Place --> Model.User

@enduml

